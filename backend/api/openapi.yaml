#
# Business Timeslot Reservation Backend
#

openapi: "3.0.3"

info:
  description: Business Timeslot Reservation Backend
  version: 0.1.0
  title: Business Timeslot Reservation Backend

servers:
  - url: http://localhost:3010/api

paths:
  /test/get_token:
    get:
      description: Gets a test token
      responses:
        200:
          description: a jwt is being sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserToken"
  /test/test_token:
    post:
      description: Test API to check token sending
      security:
        - bearerAuth: []
      responses:
        401:
          $ref: '#/components/responses/UnauthorizedError'
        200:
          description: Accepted JWT
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthTestSchema"

        

  /users/signup:
    post:
      description: Creates a new user account
      tags:
        - users
      requestBody:
        description: User details to set for user
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewAccount"
      responses:
        201:
          description: Successfully created user account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserToken"
        400:
          description: Unexpected property in account details
        409:
          description: Account with given email already exists
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/login:
    post:
      description: Validate user account credentials during login
      tags:
        - users
      requestBody:
        description: Account credentials to login with
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        200:
          description: Successful login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserToken"
        400:
          description: Email and password must be specified
        403:
          description: Incorrect password
        404:
          description: User account with given email not found

  /businesses/signup:
    post:
      description: Creates a new business account
      tags:
        - businesses
      requestBody:
        description: Business details to set for account
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewAccount"
      responses:
        201:
          description: Successfully created business account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserToken"
        400:
          description: Unexpected property in account details
        409:
          description: Account with given email already exists
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /businesses/login:
    post:
      description: Validate business account credentials during login
      tags:
        - businesses
      requestBody:
        description: Account credentials to login with
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        200:
          description: Successful login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserToken"
        400:
          description: Email and password must be specified
        403:
          description: Incorrect password
        404:
          description: Business account with given email not found

components:
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid

  # 1) Define the security scheme type (HTTP bearer)
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes

  schemas:
    AuthTestSchema:
      type: object
      properties:
        auth:
          type: string
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        
    NewAccount:
      type: object
      maxProperties: 3
      additionalProperties: false
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - username
        - email
        - password

    UserLogin:
      type: object
      maxProperties: 2
      additionalProperties: false
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - email
        - password

    UserToken:
      type: object
      maxProperties: 1
      additionalProperties: false
      properties:
        auth_token:
          type: string
      required:
        - auth_token

